function [pos, consts, fitresult, gof, posconf] = spikevalFitVoltagePulse(fitX, fitY, fitPower, ploton)
%CREATEFITS(FITX,FITY,FITPOWER)
%  Create fits.

%  Data for 'Inverse Distance' fit:
%      X Input : fitX
%      Y Input : fitY
%      Z Output: fitPower
%  Output:
%      pos : [x0, y0, z0] found by fit % ADDED BY JGB
%      consts : [K c] found by fit % ADDED BY JGB
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Dec-2015 12:48:56
%  Hand-tuned by JGB, added position argument

%% Initialization.
%ADDED by JGB
switch nargin
    case 3
        ploton = true;
end
% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 1 );
gof = struct( 'sse', cell( 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'Inverse Distance'.
[xData, yData, zData] = prepareSurfaceData( fitX, fitY, fitPower );

% Set up fittype and options.
ft = fittype( 'K*((x-x0)^2+(y-y0)^2+z0^2)^-0.5+c', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
%Order is K,c,x0,y0,z0
%Need to start with center over best channel
[poweramp,maxchan] = max(fitPower);
opts.Lower = [0 0 -Inf -Inf 0];
opts.MaxFunEvals = 1000;
opts.MaxIter = 1000;
opts.Robust = 'LAR';
opts.StartPoint = [poweramp 0 fitX(maxchan) fitY(maxchan) 10];
opts.TolFun = 1e-08;

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );
%JGB - Added
coeffs = coeffvalues(fitresult);
confints = confint(fitresult,.68); %e.g. 1 S.D.
pos = coeffs(3:5);
posconf = abs(diff(confints(:,3:5))/2);
consts = coeffs(1:2);

% Plot fit with data.
if ploton
    figure( 'Name', 'Inverse Distance' );
    h = plot( fitresult, [xData, yData], zData );
    legend( h, 'Inverse Distance', 'fitPower vs. fitX, fitY', 'Location', 'NorthEast' );
    % Label axes
    xlabel fitX
    ylabel fitY
    zlabel fitPower
    grid on
    view( -88.3, -2.8 );
end

